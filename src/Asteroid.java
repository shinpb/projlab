import java.util.Collection;
import java.util.Random;
import java.util.Vector;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Asteroid.java
//  @ Date : 2021. 03. 19.
//  @ Author : 
//
//




public class Asteroid extends Place {
	private int layers;
	private boolean isNearSun;
	private Vector<Gate> gates;
	private Material core;
	Random rand = new Random();
	
	public Asteroid() {
		gates = new Vector<Gate>();
		layers = rand.nextInt(4) + 1;  //4+1?
	}
	
	public void getDrilled() {
		if(layers == 0) {
			coreSunEffectTrigger();
		} else {
			layers = layers - 1;
		}
	}
	
	public Material mineCore() {
		if(core != null) {
			core.mined();
			Material temp = core;
			core = null;
			return temp;
		} 
		return null;
	}
	
	//Bool?
	public boolean replaceCore(Material m) {
		if(core == null) {
			core = m;
			if(isNearSun) 
				coreSunEffectTrigger();
			return true;
		}
		return false;
	}
	
	public void checkNearSun() {  
		setNearSun(rand.nextBoolean());
	}
	
	public Collection<Place> getNeighbours() {
		return neighbours;
	}
	
	public Collection<Entity> getEntities() {
		return entities;
	}
	
	public void addGate(Gate g) {
		gates.add(g);
	}
	
	public void removeGate(Gate g) {
		for(int i = 0; i < gates.size(); i++) {
			if(gates.elementAt(i).equals(g))
				gates.remove(i);
		}
	}
	
	public void setNearSun(boolean b) {
		isNearSun = b;
		if(isNearSun) {
			coreSunEffectTrigger();
		}
	}
	
	private void coreSunEffectTrigger() {
		if(isNearSun && layers == 0) {
			core.nearSunEffect();
		}
	}
	
	public void solarStorm() {
		if(core != null && layers != 0) {
			for(int i = 0; i < entities.size(); i++) {
				entities.elementAt(i).solarStormEffect();
			}
		}
	}
	
	public void setCore(Material m) {
		core = m;
		if(core != null)
			core.setAsteroid(this);
	}
	
	public boolean getNearSun() {
		return isNearSun;
	}
	
	public void addEntity(Entity e) {
		try{
			entities.add(e);
			e.setPosition(this);
		} catch(Exception ex) {
			ex.printStackTrace();
		}
		
	}
}
